# me
events {
    worker_connections 1024;
}

http {
    # Upstream definitions
    upstream api_gateway {
        server api-gateway:8000;
    }
    
    upstream test_service {
        server test-service:8001;
    }
    
    upstream llm_service {
        server llm-service:8002;
        # Backup server (در صورت نیاز)
        # server llm-service-backup:8002 backup;
    }

    upstream stt_service {
        server stt-service:8003;
        # Backup server (در صورت نیاز)
        # server stt-service-backup:8003 backup;
    }

    upstream gpu_coordinator {
        server gpu-coordinator:8080;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=llm_limit:10m rate=2r/s;  # محدودیت کمتر برای LLM
    limit_req_zone $binary_remote_addr zone=stt_limit:10m rate=5r/s;  # محدودیت متوسط برای STT
    limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=3r/s;  # برای آپلود فایل‌های صوتی

    # File upload settings
    client_max_body_size 50M;  # حداکثر 50MB برای فایل‌های صوتی
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Main API Gateway
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # CORS headers for API endpoints
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

        # Health check endpoint
        location /health {
            proxy_pass https://api_gateway/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # LLM Service routes
        location /api/v1/llm/ {
            limit_req zone=llm_limit burst=5 nodelay;
            
            proxy_pass https://llm_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # تنظیمات خاص برای LLM (timeout بیشتر)
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # افزایش حد buffer برای پاسخ‌های طولانی
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # WebSocket support برای streaming responses
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # STT Service routes
        location /api/v1/stt/ {
            limit_req zone=stt_limit burst=10 nodelay;
            
            proxy_pass https://stt_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # تنظیمات خاص برای STT (timeout بیشتر برای پردازش صوت)
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;  # 5 دقیقه برای پردازش فایل‌های صوتی
            proxy_read_timeout 300s;
            
            # افزایش buffer برای فایل‌های صوتی
            proxy_buffer_size 64k;
            proxy_buffers 8 64k;
            proxy_busy_buffers_size 128k;
            
            # افزایش حد آپلود برای فایل‌های صوتی
            client_max_body_size 50M;
            client_body_buffer_size 1m;
        }

        # STT file upload routes (با محدودیت بیشتر)
        location ~ ^/api/v1/stt/(transcribe|transcribe-batch|transcribe-base64) {
            limit_req zone=upload_limit burst=3 nodelay;
            
            proxy_pass https://stt_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # تنظیمات خاص برای آپلود
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;  # 10 دقیقه
            proxy_read_timeout 600s;
            proxy_request_buffering off;  # برای streaming بهتر
            
            # حد آپلود بالاتر
            client_max_body_size 100M;
            client_body_buffer_size 2m;
        }

        # GPU Coordinator routes
        location /api/gpu/ {
            proxy_pass https://gpu_coordinator/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # LLM Health check (direct)
        location /llm/health {
            proxy_pass https://llm_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # STT Health check (direct)
        location /stt/health {
            proxy_pass https://stt_service/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # GPU Coordinator Health check
        location /gpu/health {
            proxy_pass https://gpu_coordinator/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API routes (سایر API ها)
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass https://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Standard timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Test service
        location /test/ {
            proxy_pass https://test_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Static files (در آینده)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # CORS preflight handler
        location ~ ^/api/.* {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header Access-Control-Max-Age 1728000 always;
                add_header Content-Type "text/plain; charset=utf-8" always;
                add_header Content-Length 0 always;
                return 204;
            }
        }

        # Default route
        location / {
            return 200 '{
                "message": "Agentic AI Platform", 
                "status": "running",
                "version": "2.0.0",
                "services": {
                    "llm": "/api/v1/llm/",
                    "stt": "/api/v1/stt/",
                    "gpu": "/api/gpu/",
                    "docs": "/docs"
                }
            }';
            add_header Content-Type application/json;
        }

        # Custom error pages
        error_page 413 @request_entity_too_large;
        location @request_entity_too_large {
            return 413 '{"error": "File too large", "max_size": "50MB"}';
            add_header Content-Type application/json always;
        }

        error_page 504 @gateway_timeout;
        location @gateway_timeout {
            return 504 '{"error": "Gateway timeout", "message": "Service is taking too long to respond"}';
            add_header Content-Type application/json always;
        }
    }

    # Monitoring endpoints
    server {
        listen 80;
        server_name monitoring.localhost;

        location /prometheus/ {
            proxy_pass https://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /grafana/ {
            proxy_pass https://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Status page for nginx monitoring
    server {
        listen 8090;
        server_name localhost;

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
}